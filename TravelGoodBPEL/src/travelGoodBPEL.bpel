<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="TravelGoodBPEL"
    targetNamespace="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/TravelGoodBPEL"
    xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/TravelGoodBPEL"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodWsdl" xmlns:ns1="http://xml.netbeans.org/schema/NiceViewElements" xmlns:ns2="http://xml.netbeans.org/schema/LameDuckElements" xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions" xmlns:ns3="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" xmlns:ns4="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL">
    <import namespace="http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodWsdl" location="TravelGoodWsdl.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" location="http://localhost:8080/NiceViewTemp/NiceViewWSDLService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/LameDuckWSDLServiceWrapper" location="LameDuckWSDLServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" location="http://localhost:8080/LameDuckTest/LameDuckWSDLService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="NiceViewPartnerLink" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" partnerLinkType="tns:NiceViewWSDL" partnerRole="NiceViewWSDLPortTypeRole"/>
        <partnerLink name="LameDuckPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/LameDuckWSDLServiceWrapper" partnerLinkType="tns:LameDuckLinkType" partnerRole="LameDuckRole"/>
        <partnerLink name="PartnerLink1" xmlns:tns="http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodWsdl" partnerLinkType="tns:TravelGoodWsdl" myRole="TravelGoodWsdlPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="BookItineraryFault" messageType="ns0:bookItineraryFault"/>
        <variable name="NiceViewCancelHotelOut" messageType="ns4:cancelHotelResponse"/>
        <variable name="NiceViewCancelHotelIn" messageType="ns4:cancelHotelRequest"/>
        <variable name="LameDuckCancelFlightOut" messageType="ns3:cancelFlightResponse"/>
        <variable name="LameDuckCancelFlightIn" messageType="ns3:cancelFlight"/>
        <variable name="TravelGoodBookItineraryOut" messageType="ns0:bookItineraryResponse"/>
        <variable name="SuccessfullyBookedFlights" type="xs:int"/>
        <variable name="SuccessfullyBookedHotels" type="xs:int"/>
        <variable name="TravelGoodCancelItineraryOut" messageType="ns0:cancelItineraryResponse"/>
        <variable name="TravelGoodGetItineraryOut" messageType="ns0:getItineraryResponse"/>
        <variable name="TravelGoodAddHotelToItineraryOut" messageType="ns0:addHotelToItineraryResponse"/>
        <variable name="NumberOfFlights" type="xs:int"/>
        <variable name="NumberOfHotels" type="xs:int"/>
        <variable name="TravelGoodAddFlightToItineraryOut" messageType="ns0:addFlightToItineraryResponse"/>
        <variable name="TravelGoodGetHotelsOut" messageType="ns0:getHotelsResponse"/>
        <variable name="NiceViewGetHotelsOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:getHotelsResponse"/>
        <variable name="NiceViewGetHotelsIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:getHotelsRequest"/>
        <variable name="TravelGoodGetFlightsOut" messageType="ns0:getFlightsResponse"/>
        <variable name="LameDuckGetFlightsOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:getFlightsResponse"/>
        <variable name="LameDuckGetFlightsIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:getFlights"/>
        <variable name="TravelGoodCancelItineraryIn" messageType="ns0:cancelItineraryRequest"/>
        <variable name="TravelGoodBookItineraryIn" messageType="ns0:bookItineraryRequest"/>
        <variable name="TravelGoodGetItineraryIn" messageType="ns0:getItineraryRequest"/>
        <variable name="TravelGoodAddHotelToItineraryIn" messageType="ns0:addHotelToItineraryRequest"/>
        <variable name="TravelGoodAddFlightToItineraryIn" messageType="ns0:addFlightToItineraryRequest"/>
        <variable name="TravelGoodGetHotelsIn" messageType="ns0:getHotelsRequest"/>
        <variable name="TravelGoodGetFlightsIn" messageType="ns0:getFlightsRequest"/>
        <variable name="ItineraryOnServer" element="ns0:TGItineraryElement"/>
        <variable name="Cancelled" type="xs:int"/>
        <variable name="Confirmed" type="xs:int"/>
        <variable name="Unconfirmed" type="xs:int"/>
        <variable name="CancelledState" type="xs:int"/>
        <variable name="ConfirmedState" type="xs:int"/>
        <variable name="PaidState" type="xs:int"/>
        <variable name="PlanningState" type="xs:int"/>
        <variable name="TravelGoodInitiateItineraryOut" messageType="ns0:InitiateItineraryResponse"/>
        <variable name="TravelGoodInitiateItineraryIn" messageType="ns0:InitiateItineraryRequest"/>
    </variables>
    <correlationSets>
        <correlationSet name="ProcessCorrelationSet" properties="ns0:itineraryId"/>
    </correlationSets>
    <sequence>
        <receive name="TravelGoodInitiateItinerary" createInstance="yes" partnerLink="PartnerLink1" operation="initiateItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodInitiateItineraryIn"/>
        <assign name="TravelGoodInitiateItineraryAssign">
            <copy>
                <from>2</from>
                <to variable="Cancelled"/>
            </copy>
            <copy>
                <from>1</from>
                <to variable="Confirmed"/>
            </copy>
            <copy>
                <from>0</from>
                <to variable="Unconfirmed"/>
            </copy>
            <copy>
                <from>3</from>
                <to variable="CancelledState"/>
            </copy>
            <copy>
                <from>2</from>
                <to variable="ConfirmedState"/>
            </copy>
            <copy>
                <from>1</from>
                <to variable="PaidState"/>
            </copy>
            <copy>
                <from>0</from>
                <to variable="PlanningState"/>
            </copy>
            <copy>
                <from>sxxf:getGUID()</from>
                <to>$ItineraryOnServer/id</to>
            </copy>
            <copy>
                <from variable="PlanningState"/>
                <to>$ItineraryOnServer/state</to>
            </copy>
            <copy>
                <from>$ItineraryOnServer/id</from>
                <to variable="TravelGoodInitiateItineraryOut" part="itineraryId5"/>
            </copy>
            <copy>
                <from>''</from>
                <to>$ItineraryOnServer/flights</to>
            </copy>
            <copy>
                <from>''</from>
                <to>$ItineraryOnServer/hotels</to>
            </copy>
            <copy>
                <from>0</from>
                <to variable="SuccessfullyBookedFlights"/>
            </copy>
            <copy>
                <from>0</from>
                <to variable="SuccessfullyBookedHotels"/>
            </copy>
        </assign>
        <reply name="TravelGoodInitiateItineraryReply" partnerLink="PartnerLink1" operation="initiateItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodInitiateItineraryOut">
            <correlations>
                <correlation set="ProcessCorrelationSet" initiate="yes"/>
            </correlations>
        </reply>
        <while name="While1">
            <condition>true()</condition>
            <pick name="Pick1">
                <onMessage partnerLink="PartnerLink1" operation="getFlights" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetFlightsIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence1">
                        <assign name="TravelGoodGetFlightsAssign1">
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns2:origin</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns2:origin</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns2:destination</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns2:destination</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns2:flightDate</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns2:flightDate</to>
                            </copy>
                        </assign>
                        <invoke name="LameDuckGetFlightsInvoke" partnerLink="LameDuckPartnerLink" operation="getFlights" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" portType="tns:LameDuckPortType" inputVariable="LameDuckGetFlightsIn" outputVariable="LameDuckGetFlightsOut"/>
                        <assign name="TravelGoodGetFlightsAssign2">
                            <copy>
                                <from>$LameDuckGetFlightsOut.flightInfoList/ns2:flightInfo</from>
                                <to>$TravelGoodGetFlightsOut.output1/ns2:flightInfo</to>
                            </copy>
                        </assign>
                        <reply name="TravelGoodGetFlightsReply" partnerLink="PartnerLink1" operation="getFlights" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetFlightsOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="getHotels" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetHotelsIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence2">
                        <assign name="TravelGoodGetHotelsAssign1">
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns1:city</from>
                                <to>$NiceViewGetHotelsIn.input/ns1:city</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns1:arrivalDate</from>
                                <to>$NiceViewGetHotelsIn.input/ns1:arrivalDate</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns1:departureDate</from>
                                <to>$NiceViewGetHotelsIn.input/ns1:departureDate</to>
                            </copy>
                        </assign>
                        <invoke name="NiceViewGetHotelsInvoke" partnerLink="NiceViewPartnerLink" operation="getHotels" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewGetHotelsIn" outputVariable="NiceViewGetHotelsOut"/>
                        <assign name="TravelGoodGetHotelsAssign2">
                            <copy>
                                <from>$NiceViewGetHotelsOut.hotels/ns1:hotelInformations</from>
                                <to>$TravelGoodGetHotelsOut.output2/ns1:hotelInformations</to>
                            </copy>
                        </assign>
                        <reply name="TravelGoodGetHotelsReply" partnerLink="PartnerLink1" operation="getHotels" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetHotelsOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="addFlightToItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodAddFlightToItineraryIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence3">
                        <if name="IfPlanning">
                            <condition>$ItineraryOnServer/state = $PlanningState</condition>
                            <sequence name="Sequence5">
                                <assign name="TravelGoodAddFlightAssign1">
                                    <copy>
                                        <from>count($ItineraryOnServer/flights/ns2:flightInfo)</from>
                                            <to variable="NumberOfFlights"/>
                                    </copy>
                                        <copy>
                                        <from>$TravelGoodAddFlightToItineraryIn.input3/flightInfo</from>
                                            <to>$ItineraryOnServer/flights/ns2:flightInfo[$NumberOfFlights + 1]</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/id</from>
                                            <to>$TravelGoodAddFlightToItineraryOut.itinerary1/id</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/state</from>
                                            <to>$TravelGoodAddFlightToItineraryOut.itinerary1/state</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/hotels</from>
                                            <to>$TravelGoodAddFlightToItineraryOut.itinerary1/hotels</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/flights</from>
                                            <to>$TravelGoodAddFlightToItineraryOut.itinerary1/flights</to>
                                    </copy>
                                        <copy>
                                        <from>count($ItineraryOnServer/flights/ns2:flightInfo)</from>
                                            <to variable="NumberOfFlights"/>
                                    </copy>
                                </assign>
                                <reply name="TravelGoodAddFlightReply" partnerLink="PartnerLink1" operation="addFlightToItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodAddFlightToItineraryOut"/>
                            </sequence>
                        </if>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="addHotelToItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodAddHotelToItineraryIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence4">
                        <if name="IfPlanning2">
                            <condition>$ItineraryOnServer/state = $PlanningState</condition>
                            <sequence name="Sequence6">
                                <assign name="TravelGoodAddHotelAssign">
                                    <copy>
                                        <from>count($ItineraryOnServer/hotels/ns1:hotelInformations)</from>
                                            <to variable="NumberOfHotels"/>
                                    </copy>
                                        <copy>
                                        <from>$TravelGoodAddHotelToItineraryIn.input4/hotel</from>
                                            <to>$ItineraryOnServer/hotels/ns1:hotelInformations[$NumberOfHotels + 1]</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/flights</from>
                                            <to>$TravelGoodAddHotelToItineraryOut.itinerary2/flights</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/hotels</from>
                                            <to>$TravelGoodAddHotelToItineraryOut.itinerary2/hotels</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/state</from>
                                            <to>$TravelGoodAddHotelToItineraryOut.itinerary2/state</to>
                                    </copy>
                                        <copy>
                                        <from>$ItineraryOnServer/id</from>
                                            <to>$TravelGoodAddHotelToItineraryOut.itinerary2/id</to>
                                    </copy>
                                        <copy>
                                        <from>count($ItineraryOnServer/hotels/ns1:hotelInformations)</from>
                                            <to variable="NumberOfHotels"/>
                                    </copy>
                                </assign>
                                <reply name="TravelGoodAddHotelReply" partnerLink="PartnerLink1" operation="addHotelToItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodAddHotelToItineraryOut"/>
                            </sequence>
                        </if>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="getItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetItineraryIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence7">
                        <assign name="TravelGoodGetItineraryAssign">
                            <copy>
                                <from>$ItineraryOnServer/flights</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/flights</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/hotels</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/hotels</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/state</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/state</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/id</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/id</to>
                            </copy>
                        </assign>
                        <reply name="TravelGoodGetItineraryReply" partnerLink="PartnerLink1" operation="getItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodGetItineraryOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodBookItineraryIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <if name="IfPlanning1">
                        <condition>$ItineraryOnServer/state = $PlanningState</condition>
                        <sequence name="Sequence9">
                            <forEach name="ForEachFlightBook" parallel="no" counterName="ForEach1Counter">
                                <startCounterValue>1</startCounterValue>
                                <finalCounterValue>$NumberOfFlights</finalCounterValue>
                                <scope name="ForEachFlightScope">
                                    <variables>
                                        <variable name="LameDuckBookFlightOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:bookFlightResponse"/>
                                        <variable name="LameDuckBookFlightIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:bookFlight"/>
                                    </variables>
                                    <faultHandlers>
                                        <catch faultName="ns3:BookFlightFault">
                                            <sequence name="Sequence20">
                                                <forEach name="ForEachFlightCompensate1" parallel="no" counterName="ForEach1Counter">
                                                    <startCounterValue>1</startCounterValue>
                                                        <finalCounterValue>$SuccessfullyBookedFlights</finalCounterValue>
                                                        <scope name="ForEachFlightCompensateScope1">
                                                        <faultHandlers>
                                                                <catchAll>
                                                                        <sequence name="Sequence17">
                                                                                <assign name="BookCompensateFailedAssign1">
                                                                                        <copy>
                                                                                                <from>'Compensation failed'</from>
                                                                                                    <to variable="BookItineraryFault" part="bookFault1"/>
                                                                                            </copy>
                                                                                    </assign>
                                                                                    <reply name="BookCompensateFailedReply1" partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" faultName="ns0:fault1" variable="BookItineraryFault"/>
                                                                                    <exit name="Exit1"/>
                                                                            </sequence>
                                                                    </catchAll>
                                                            </faultHandlers>
                                                            <sequence name="Sequence12">
                                                                <assign name="ForEachFlightCompensateAssign1">
                                                                        <copy>
                                                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:cardNumber</from>
                                                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:cardNumber</to>
                                                                            </copy>
                                                                            <copy>
                                                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:holderName</from>
                                                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:holderName</to>
                                                                            </copy>
                                                                            <copy>
                                                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:expirationDate</from>
                                                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:expirationDate</to>
                                                                            </copy>
                                                                            <copy>
                                                                                <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:bookingNumber</from>
                                                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns2:bookingNumber</to>
                                                                            </copy>
                                                                            <copy>
                                                                                <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:flightPrice</from>
                                                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns2:price</to>
                                                                            </copy>
                                                                    </assign>
                                                                    <invoke name="LameDuckCompensateCancelFlight" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:LameDuckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                                                    <assign name="ForEachFlightCompensateAssign2">
                                                                        <copy>
                                                                                <from variable="Cancelled"/>
                                                                                    <to>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:state</to>
                                                                            </copy>
                                                                    </assign>
                                                            </sequence>
                                                    </scope>
                                                </forEach>
                                                <assign name="ForEachFlightCompensateCompleteAssign">
                                                    <copy>
                                                        <from variable="CancelledState"/>
                                                        <to>$ItineraryOnServer/state</to>
                                                    </copy>
                                                </assign>
                                            </sequence>
                                        </catch>
                                    </faultHandlers>
                                    <sequence name="Sequence10">
                                        <assign name="ForEachFlightBookAssign1">
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:cardNumber</from>
                                                <to>$LameDuckBookFlightIn.flightInfo/ns2:creditcardInfo/ns2:cardNumber</to>
                                            </copy>
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:holderName</from>
                                                <to>$LameDuckBookFlightIn.flightInfo/ns2:creditcardInfo/ns2:holderName</to>
                                            </copy>
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:expirationDate</from>
                                                <to>$LameDuckBookFlightIn.flightInfo/ns2:creditcardInfo/ns2:expirationDate</to>
                                            </copy>
                                            <copy>
                                                <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:bookingNumber
                                                    <sxed:editor>
                                                        <sxed:predicate path="$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]" source="from"/>
                                                    </sxed:editor>
                                                </from>
                                                <to>$LameDuckBookFlightIn.flightInfo/ns2:bookingNumber</to>
                                            </copy>
                                        </assign>
                                        <invoke name="LameDuckBookFlightInvoke" partnerLink="LameDuckPartnerLink" operation="bookFlight" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" portType="tns:LameDuckPortType" inputVariable="LameDuckBookFlightIn" outputVariable="LameDuckBookFlightOut"/>
                                        <assign name="ForEachFlightBookAssign2">
                                            <copy>
                                                <from variable="Confirmed"/>
                                                <to>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:state
                                                    <sxed:editor>
                                                        <sxed:predicate path="$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]" source="to"/>
                                                    </sxed:editor>
                                                </to>
                                            </copy>
                                            <copy>
                                                <from variable="ForEach1Counter"/>
                                                <to variable="SuccessfullyBookedFlights"/>
                                            </copy>
                                        </assign>
                                    </sequence>
                                </scope>
                            </forEach>
                            <forEach name="ForEachHotelBook" parallel="no" counterName="ForEach2Counter">
                                <startCounterValue>1</startCounterValue>
                                <finalCounterValue>$NumberOfHotels</finalCounterValue>
                                <scope name="ForEachHotelScope">
                                    <variables>
                                        <variable name="NiceViewBookHotelOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:bookHotelResponse"/>
                                        <variable name="NiceViewBookHotelIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:bookHotelRequest"/>
                                    </variables>
                                    <faultHandlers>
                                        <catchAll>
                                            <sequence name="Sequence13">
                                                <forEach name="ForEachFlightCompensate2" parallel="no" counterName="ForEach1Counter">
                                                        <startCounterValue>1</startCounterValue>
                                                            <finalCounterValue>$SuccessfullyBookedFlights</finalCounterValue>
                                                            <scope name="ForEachFlightCompensateScope2">
                                                                <faultHandlers>
                                                                        <catchAll>
                                                                                <sequence name="Sequence18">
                                                                                        <assign name="BookCompensateFailedAssign2">
                                                                                                <copy>
                                                                                                        <from>'Compensation failed'</from>
                                                                                                            <to variable="BookItineraryFault" part="bookFault1"/>
                                                                                                    </copy>
                                                                                            </assign>
                                                                                            <reply name="BookCompensateFailedReply2" partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" faultName="ns0:fault1" variable="BookItineraryFault"/>
                                                                                            <exit name="Exit2"/>
                                                                                    </sequence>
                                                                            </catchAll>
                                                                    </faultHandlers>
                                                                    <sequence name="Sequence14">
                                                                        <assign name="ForEachFlightCompensateAssign1">
                                                                                <copy>
                                                                                        <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:cardNumber</from>
                                                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:cardNumber</to>
                                                                                    </copy>
                                                                                    <copy>
                                                                                        <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:holderName</from>
                                                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:holderName</to>
                                                                                    </copy>
                                                                                    <copy>
                                                                                        <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:expirationDate</from>
                                                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:expirationDate</to>
                                                                                    </copy>
                                                                                    <copy>
                                                                                        <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:bookingNumber</from>
                                                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:bookingNumber</to>
                                                                                    </copy>
                                                                                    <copy>
                                                                                        <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:flightPrice</from>
                                                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:price</to>
                                                                                    </copy>
                                                                            </assign>
                                                                            <invoke name="LameDuckCompensateCancelFlight" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:LameDuckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                                                            <assign name="ForEachFlightCompensateAssign2">
                                                                                <copy>
                                                                                        <from variable="Cancelled"/>
                                                                                            <to>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:state</to>
                                                                                    </copy>
                                                                            </assign>
                                                                    </sequence>
                                                            </scope>
                                                    </forEach>
                                                    <forEach name="ForEachHotelCompensate1" parallel="no" counterName="ForEach1Counter">
                                                        <startCounterValue>1</startCounterValue>
                                                            <finalCounterValue>$SuccessfullyBookedHotels</finalCounterValue>
                                                            <scope name="ForEachHotelComensateScope">
                                                                <faultHandlers>
                                                                        <catchAll>
                                                                                <sequence name="Sequence19">
                                                                                        <assign name="BookCompensateFailedAssign3">
                                                                                                <copy>
                                                                                                        <from>'Compensation failed'</from>
                                                                                                            <to variable="BookItineraryFault" part="bookFault1"/>
                                                                                                    </copy>
                                                                                            </assign>
                                                                                            <reply name="BookCompensateFailedReply3" partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" faultName="ns0:fault1" variable="BookItineraryFault"/>
                                                                                            <exit name="Exit3"/>
                                                                                    </sequence>
                                                                            </catchAll>
                                                                    </faultHandlers>
                                                                    <sequence name="Sequence15">
                                                                        <assign name="ForEachHotelCompensateAssign1">
                                                                                <copy>
                                                                                        <from>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach1Counter]/ns1:bookingNumber</from>
                                                                                            <to>$NiceViewCancelHotelIn.input/ns1:bookingNumber</to>
                                                                                    </copy>
                                                                            </assign>
                                                                            <invoke name="NiceViewCompensateCancelHotelInvoke" partnerLink="NiceViewPartnerLink" operation="cancelHotel" portType="ns4:NiceViewWSDLPortType" inputVariable="NiceViewCancelHotelIn" outputVariable="NiceViewCancelHotelOut"/>
                                                                            <assign name="ForEachHotelCompensateAssign2">
                                                                                <copy>
                                                                                        <from variable="Cancelled"/>
                                                                                            <to>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach1Counter]/ns1:state</to>
                                                                                    </copy>
                                                                            </assign>
                                                                    </sequence>
                                                            </scope>
                                                    </forEach>
                                                <assign name="ForEachHotelComensateCompleteAssign">
                                                    <copy>
                                                        <from variable="CancelledState"/>
                                                        <to>$ItineraryOnServer/state</to>
                                                    </copy>
                                                    <copy>
                                                        <from>$ItineraryOnServer/flights</from>
                                                        <to>$TravelGoodBookItineraryOut.bookedItinerary1/flights</to>
                                                    </copy>
                                                    <copy>
                                                        <from>$ItineraryOnServer/hotels</from>
                                                        <to>$TravelGoodBookItineraryOut.bookedItinerary1/hotels</to>
                                                    </copy>
                                                    <copy>
                                                        <from>$ItineraryOnServer/state</from>
                                                        <to>$TravelGoodBookItineraryOut.bookedItinerary1/state</to>
                                                    </copy>
                                                    <copy>
                                                        <from>$ItineraryOnServer/id</from>
                                                        <to>$TravelGoodBookItineraryOut.bookedItinerary1/id</to>
                                                    </copy>
                                                </assign>
                                                <reply name="ForEachHotelCompensateCompleteReply" partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodBookItineraryOut"/>
                                            </sequence>
                                        </catchAll>
                                    </faultHandlers>
                                    <sequence name="Sequence11">
                                        <assign name="ForEachHotelBookAssign1">
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:cardNumber</from>
                                                <to>$NiceViewBookHotelIn.input/ns1:creditCardInformation/ns1:cardNumber</to>
                                            </copy>
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:holderName</from>
                                                <to>$NiceViewBookHotelIn.input/ns1:creditCardInformation/ns1:holderName</to>
                                            </copy>
                                            <copy>
                                                <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:expirationDate</from>
                                                <to>$NiceViewBookHotelIn.input/ns1:creditCardInformation/ns1:expirationDate</to>
                                            </copy>
                                            <copy>
                                                <from>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach2Counter]/ns1:bookingNumber</from>
                                                <to>$NiceViewBookHotelIn.input/ns1:bookingNumber</to>
                                            </copy>
                                        </assign>
                                        <invoke name="NiceViewBookHotelInvoke" partnerLink="NiceViewPartnerLink" operation="bookHotel" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewBookHotelIn" outputVariable="NiceViewBookHotelOut">
                                        </invoke>
                                        <assign name="ForEachHotelBookAssign2">
                                            <copy>
                                                <from variable="Confirmed"/>
                                                <to>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach2Counter]/ns1:state
                                                    <sxed:editor>
                                                        <sxed:predicate path="$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach1Counter]" source="to"/>
                                                    </sxed:editor>
                                                </to>
                                            </copy>
                                            <copy>
                                                <from variable="ForEach2Counter"/>
                                                <to variable="SuccessfullyBookedHotels"/>
                                            </copy>
                                        </assign>
                                    </sequence>
                                </scope>
                            </forEach>
                            <assign name="TravelGoodBookItineraryAssign1">
                                <copy>
                                    <from variable="PaidState"/>
                                    <to>$ItineraryOnServer/state</to>
                                </copy>
                                <copy>
                                    <from>$ItineraryOnServer/flights</from>
                                    <to>$TravelGoodBookItineraryOut.bookedItinerary1/flights</to>
                                </copy>
                                <copy>
                                    <from>$ItineraryOnServer/hotels</from>
                                    <to>$TravelGoodBookItineraryOut.bookedItinerary1/hotels</to>
                                </copy>
                                <copy>
                                    <from>$ItineraryOnServer/state</from>
                                    <to>$TravelGoodBookItineraryOut.bookedItinerary1/state</to>
                                </copy>
                                <copy>
                                    <from>$ItineraryOnServer/id</from>
                                    <to>$TravelGoodBookItineraryOut.bookedItinerary1/id</to>
                                </copy>
                            </assign>
                            <reply name="TravelGoodBookItineraryReply1" partnerLink="PartnerLink1" operation="bookItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodBookItineraryOut"/>
                        </sequence>
                    </if>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodCancelItineraryIn">
                    <correlations>
                        <correlation set="ProcessCorrelationSet" initiate="no"/>
                    </correlations>
                    <if name="IfPlanning3">
                        <condition>$ItineraryOnServer/state = $PlanningState</condition>
                        <sequence name="Sequence8">
                            <assign name="TravelGoodCancelItineraryPlanningAssign">
                                <copy>
                                        <from variable="CancelledState"/>
                                            <to>$ItineraryOnServer/state</to>
                                    </copy>
                                <copy>
                                    <from>'Successfully cancelled itinerary'</from>
                                    <to variable="TravelGoodCancelItineraryOut" part="status1"/>
                                </copy>
                            </assign>
                            <reply name="TravelGoodCancelItineraryPlanningReply" partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodCancelItineraryOut"/>
                        </sequence>
                        <elseif>
                            <condition>$ItineraryOnServer/state = $PaidState</condition>
                            <sequence name="Sequence16">
                                <forEach name="ForEachFlightPaidCancel" parallel="no" counterName="ForEach1Counter">
                                    <startCounterValue>1</startCounterValue>
                                        <finalCounterValue>$SuccessfullyBookedFlights</finalCounterValue>
                                        <scope name="ForEachFlightCancelScope1">
                                        <sequence name="Sequence12">
                                                <assign name="ForEachFlightCompensateAssign1">
                                                        <copy>
                                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:cardNumber</from>
                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:cardNumber</to>
                                                        </copy>
                                                            <copy>
                                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:holderName</from>
                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:holderName</to>
                                                        </copy>
                                                            <copy>
                                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns2:expirationDate</from>
                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:creditCardInformation/ns2:expirationDate</to>
                                                        </copy>
                                                            <copy>
                                                            <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:bookingNumber</from>
                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:bookingNumber</to>
                                                        </copy>
                                                            <copy>
                                                            <from>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:flightPrice</from>
                                                            <to>$LameDuckCancelFlightIn.flightInfo/ns2:price</to>
                                                        </copy>
                                                    </assign>
                                                    <invoke name="LameDuckCompensateCancelFlight" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:LameDuckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                                    <assign name="ForEachFlightCompensateAssign2">
                                                        <copy>
                                                            <from variable="Cancelled"/>
                                                            <to>$ItineraryOnServer/flights/ns2:flightInfo[$ForEach1Counter]/ns2:state</to>
                                                        </copy>
                                                    </assign>
                                            </sequence>
                                    </scope>
                                </forEach>
                                <forEach name="ForEachHotelPaidCancel" parallel="no" counterName="ForEach1Counter">
                                    <startCounterValue>1</startCounterValue>
                                        <finalCounterValue>$SuccessfullyBookedHotels</finalCounterValue>
                                        <scope name="ForEachHotelCancelScope">
                                            <sequence name="Sequence15">
                                                    <assign name="ForEachHotelCompensateAssign1">
                                                            <copy>
                                                                <from>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach1Counter]/ns1:bookingNumber</from>
                                                                <to>$NiceViewCancelHotelIn.input/ns1:bookingNumber</to>
                                                            </copy>
                                                        </assign>
                                                        <invoke name="NiceViewCompensateCancelHotelInvoke" partnerLink="NiceViewPartnerLink" operation="cancelHotel" portType="ns4:NiceViewWSDLPortType" inputVariable="NiceViewCancelHotelIn" outputVariable="NiceViewCancelHotelOut"/>
                                                        <assign name="ForEachHotelCompensateAssign2">
                                                            <copy>
                                                                <from variable="Cancelled"/>
                                                                <to>$ItineraryOnServer/hotels/ns1:hotelInformations[$ForEach1Counter]/ns1:state</to>
                                                            </copy>
                                                        </assign>
                                                </sequence>
                                        </scope>
                                </forEach>
                                <assign name="PaidItineraryCancelCompleteAssign">
                                    <copy>
                                        <from>'Successfully cancelled itinerary'</from>
                                        <to variable="TravelGoodCancelItineraryOut" part="status1"/>
                                    </copy>
                                    <copy>
                                        <from variable="CancelledState"/>
                                        <to>$ItineraryOnServer/state</to>
                                    </copy>
                                </assign>
                                <reply name="PaidItineraryCancelReply" partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns0:TravelGoodWsdlPortType" variable="TravelGoodCancelItineraryOut"/>
                            </sequence>
                        </elseif>
                    </if>
                </onMessage>
            </pick>
        </while>
    </sequence>
</process>
