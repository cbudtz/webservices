<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="travelGoodBPEL"
    targetNamespace="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns2="urn://fastmoney.imm.dtu.dk" xmlns:ns3="http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodWsdl" xmlns:ns0="http://xml.netbeans.org/schema/TravelGoodElements" xmlns:ns4="http://xml.netbeans.org/schema/LameDuckElements" xmlns:ns5="http://xml.netbeans.org/schema/NiceViewElements">
    <import namespace="http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodWsdl" location="TravelGoodWsdl.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/LameDuckWSDLServiceWrapper" location="LameDuckWSDLServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" location="http://localhost:8080/LameDuckTest/LameDuckWSDLService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://xml.netbeans.org/schema/TravelGoodElements" location="TravelGoodElements.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
    <import namespace="http://xml.netbeans.org/schema/LameDuckElements" location="http://localhost:8080/LameDuckTest/LameDuckWSDLService?xsd=1" importType="http://www.w3.org/2001/XMLSchema"/>
    <import namespace="http://xml.netbeans.org/schema/NiceViewElements" location="http://localhost:8080/NiceViewTemp/NiceViewWSDLService?xsd=1" importType="http://www.w3.org/2001/XMLSchema"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" location="http://localhost:8080/NiceViewTemp/NiceViewWSDLService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="PartnerLink2" xmlns:tns="http://enterprise.netbeans.org/bpel/LameDuckWSDLServiceWrapper" partnerLinkType="tns:LameDuckLinkType" partnerRole="LameDuckRole"/>
        <partnerLink name="PartnerLink3" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" partnerLinkType="tns:NiceViewWSDL" partnerRole="NiceViewWSDLPortTypeRole"/>
        <partnerLink name="PartnerLink1" partnerLinkType="ns3:TravelGoodWsdl" myRole="TravelGoodWsdlPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="TravelGoodPaidStateCancelItineraryIn" messageType="ns3:cancelItineraryRequest"/>
        <variable name="TravelGoodPaidStateGetItineraryOut" messageType="ns3:getItineraryResponse"/>
        <variable name="TravelGoodPaidStateGetItineraryIn" messageType="ns3:getItineraryRequest"/>
        <variable name="TravelGoodBookItineraryIn" messageType="ns3:bookItineraryRequest"/>
        <variable name="TravelGoodCancelledGetItineraryOut" messageType="ns3:getItineraryResponse"/>
        <variable name="TravelGoodCancelledGetItineraryIn" messageType="ns3:getItineraryRequest"/>
        <variable name="TravelGoodPlanningPhaseCancelItineraryOut" messageType="ns3:cancelItineraryResponse"/>
        <variable name="TravelGoodPlanningPhaseCancelItineraryIn" messageType="ns3:cancelItineraryRequest"/>
        <variable name="NumberOfHotels" type="xs:int"/>
        <variable name="TravelGoodAddHotelToItineraryOut" messageType="ns3:addHotelToItineraryResponse"/>
        <variable name="TravelGoodAddHotelToItineraryIn" messageType="ns3:addHotelToItineraryRequest"/>
        <variable name="NumberOfFlights" type="xs:int"/>
        <variable name="TravelGoodAddFlightToItineraryOut" messageType="ns3:addFlightToItineraryResponse"/>
        <variable name="TravelGoodAddFlightToItineraryIn" messageType="ns3:addFlightToItineraryRequest"/>
        <variable name="TravelGoodGetItineraryOut" messageType="ns3:getItineraryResponse"/>
        <variable name="TravelGoodGetItineraryIn" messageType="ns3:getItineraryRequest"/>
        <variable name="TravelGoodGetHotelsOut" messageType="ns3:getHotelsResponse"/>
        <variable name="NiceViewGetHotelsOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:getHotelsResponse"/>
        <variable name="NiceViewGetHotelsIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:getHotelsRequest"/>
        <variable name="TravelGoodGetHotelsIn" messageType="ns3:getHotelsRequest"/>
        <variable name="TravelGoodGetFlightsOut" messageType="ns3:getFlightsResponse"/>
        <variable name="LameDuckGetFlightsOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:getFlightsResponse"/>
        <variable name="LameDuckGetFlightsIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:getFlights"/>
        <variable name="TravelGoodGetFlightsIn" messageType="ns3:getFlightsRequest"/>
        <variable name="CancelledState" type="xs:int"/>
        <variable name="ConfirmedState" type="xs:int"/>
        <variable name="PaidState" type="xs:int"/>
        <variable name="PlanningState" type="xs:int"/>
        <variable name="ItineraryOnServer" element="ns3:TGItineraryElement"/>
        <variable name="TravelGoodInitiateItineraryOut" messageType="ns3:InitiateItineraryResponse"/>
        <variable name="TravelGoodInitiateItineraryIn" messageType="ns3:InitiateItineraryRequest"/>
    </variables>
    <correlationSets>
        <correlationSet name="ItineraryCorrelationSet" properties="ns3:itineraryId"/>
    </correlationSets>
    <sequence name="Sequence1">
        <receive name="initiateRecieve" createInstance="yes" partnerLink="PartnerLink1" operation="initiateItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodInitiateItineraryIn">
            <correlations>
                <correlation set="ItineraryCorrelationSet" initiate="yes"/>
            </correlations>
        </receive>
        <assign name="initiateAssign">
            <copy>
                <from>2</from>
                <to variable="ConfirmedState"/>
            </copy>
            <copy>
                <from>0</from>
                <to variable="PlanningState"/>
            </copy>
            <copy>
                <from>1</from>
                <to variable="PaidState"/>
            </copy>
            <copy>
                <from>3</from>
                <to variable="CancelledState"/>
            </copy>
            <copy>
                <from>$TravelGoodInitiateItineraryIn.init1/itineraryId</from>
                <to variable="TravelGoodInitiateItineraryOut" part="itineraryId5"/>
            </copy>
            <copy>
                <from>$TravelGoodInitiateItineraryIn.init1/itinerary/flights</from>
                <to>$ItineraryOnServer/flights</to>
            </copy>
            <copy>
                <from>$TravelGoodInitiateItineraryIn.init1/itinerary/hotels</from>
                <to>$ItineraryOnServer/hotels</to>
            </copy>
            <copy>
                <from>$TravelGoodInitiateItineraryIn.init1/itineraryId</from>
                <to>$ItineraryOnServer/id</to>
            </copy>
            <copy>
                <from variable="PlanningState"/>
                <to>$ItineraryOnServer/state/ns0:state</to>
            </copy>
        </assign>
        <reply name="initiateReply" partnerLink="PartnerLink1" operation="initiateItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodInitiateItineraryOut"/>
        <while name="PlanningPhase">
            <condition>$PlanningState = $ItineraryOnServer/state/ns0:state</condition>
            <pick name="Pick1" createInstance="no">
                <onMessage partnerLink="PartnerLink1" operation="getFlights" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetFlightsIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence2">
                        <assign name="GetFlightsAssign">
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns4:origin</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns4:origin</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns4:destination</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns4:destination</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetFlightsIn.input1/flightRequest/ns4:flightDate</from>
                                <to>$LameDuckGetFlightsIn.flightInfo/ns4:flightDate</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeGetFlights" partnerLink="PartnerLink2" operation="getFlights" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" portType="tns:LameDuckPortType" inputVariable="LameDuckGetFlightsIn" outputVariable="LameDuckGetFlightsOut"/>
                        <assign name="GetFlightsAssign2">
                            <copy>
                                <from>$LameDuckGetFlightsOut.flightInfoList/ns4:flightInfo</from>
                                <to>$TravelGoodGetFlightsOut.output1/ns4:flightInfo</to>
                            </copy>
                        </assign>
                        <reply name="ReplyGetFlights" partnerLink="PartnerLink1" operation="getFlights" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetFlightsOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="getHotels" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetHotelsIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence3">
                        <assign name="GetHoteslAssign1">
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns5:city</from>
                                <to>$NiceViewGetHotelsIn.input/ns5:city</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns5:arrivalDate</from>
                                <to>$NiceViewGetHotelsIn.input/ns5:arrivalDate</to>
                            </copy>
                            <copy>
                                <from>$TravelGoodGetHotelsIn.input2/request/ns5:departureDate</from>
                                <to>$NiceViewGetHotelsIn.input/ns5:departureDate</to>
                            </copy>
                        </assign>
                        <invoke name="InvokeGetHotels" partnerLink="PartnerLink3" operation="getHotels" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewGetHotelsIn" outputVariable="NiceViewGetHotelsOut"/>
                        <assign name="GetHotelsAssign2">
                            <copy>
                                <from>$NiceViewGetHotelsOut.hotels/ns5:hotelInformations</from>
                                <to>$TravelGoodGetHotelsOut.output2/ns5:hotelInformations</to>
                            </copy>
                        </assign>
                        <reply name="ReplyGetHotels" partnerLink="PartnerLink1" operation="getHotels" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetHotelsOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetItineraryIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence4">
                        <assign name="GetItineraryAssign">
                            <copy>
                                <from>$ItineraryOnServer/flights</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/flights</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/hotels</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/hotels</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/state</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/state</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/id</from>
                                <to>$TravelGoodGetItineraryOut.itinerary5/id</to>
                            </copy>
                        </assign>
                        <reply name="GetItineraryReply" partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodGetItineraryOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="addFlightToItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodAddFlightToItineraryIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence5">
                        <assign name="AddFlightToItineraryAssign">
                            <copy>
                                <from>count($ItineraryOnServer/flights/ns4:flightInfo)</from>
                                <to variable="NumberOfFlights"/>
                            </copy>
                            <copy>
                                <from>$TravelGoodAddFlightToItineraryIn.input3/flightInfo</from>
                                <to>$ItineraryOnServer/flights/ns4:flightInfo[$NumberOfFlights + 1]</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/id</from>
                                <to>$TravelGoodAddFlightToItineraryOut.itinerary1/id</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/state</from>
                                <to>$TravelGoodAddFlightToItineraryOut.itinerary1/state</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/hotels</from>
                                <to>$TravelGoodAddFlightToItineraryOut.itinerary1/hotels</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/flights</from>
                                <to>$TravelGoodAddFlightToItineraryOut.itinerary1/flights</to>
                            </copy>
                            <copy>
                                <from>count($ItineraryOnServer/flights/ns4:flightInfo)</from>
                                <to variable="NumberOfFlights"/>
                            </copy>
                        </assign>
                        <reply name="AddFlightToItineraryReply" partnerLink="PartnerLink1" operation="addFlightToItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodAddFlightToItineraryOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="addHotelToItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodAddHotelToItineraryIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence6">
                        <assign name="AddHotelToItineraryAssign">
                            <copy>
                                <from>count($ItineraryOnServer/hotels/ns5:hotelInformations)</from>
                                <to variable="NumberOfHotels"/>
                            </copy>
                            <copy>
                                <from>$TravelGoodAddHotelToItineraryIn.input4/hotel</from>
                                <to>$ItineraryOnServer/hotels/ns5:hotelInformations[$NumberOfHotels + 1]</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/flights</from>
                                <to>$TravelGoodAddHotelToItineraryOut.itinerary2/flights</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/hotels</from>
                                <to>$TravelGoodAddHotelToItineraryOut.itinerary2/hotels</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/state</from>
                                <to>$TravelGoodAddHotelToItineraryOut.itinerary2/state</to>
                            </copy>
                            <copy>
                                <from>$ItineraryOnServer/id</from>
                                <to>$TravelGoodAddHotelToItineraryOut.itinerary2/id</to>
                            </copy>
                            <copy>
                                <from>count($ItineraryOnServer/hotels/ns5:hotelInformations)</from>
                                <to variable="NumberOfHotels"/>
                            </copy>
                        </assign>
                        <reply name="AddHotelToItineraryReply" partnerLink="PartnerLink1" operation="addHotelToItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodAddHotelToItineraryOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodPlanningPhaseCancelItineraryIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence7">
                        <assign name="PlanningPhaseCancelAssign">
                            <copy>
                                <from variable="CancelledState"/>
                                <to>$ItineraryOnServer/state/ns0:state</to>
                            </copy>
                            <copy>
                                <from>'Successfully cancelled'</from>
                                <to variable="TravelGoodPlanningPhaseCancelItineraryOut" part="status1"/>
                            </copy>
                        </assign>
                        <reply name="CancelPlanningPhase" partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodPlanningPhaseCancelItineraryOut"/>
                    </sequence>
                </onMessage>
                <onMessage partnerLink="PartnerLink1" operation="bookItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodBookItineraryIn">
                    <correlations>
                        <correlation set="ItineraryCorrelationSet" initiate="no"/>
                    </correlations>
                    <sequence name="Sequence10">
                        <forEach name="ForEachFlight" parallel="no" counterName="ForEach1Counter" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL">
                            <startCounterValue>1</startCounterValue>
                                <finalCounterValue>$NumberOfFlights</finalCounterValue>
                                <scope name="BookAllFlightsScope">
                                    <variables>
                                            <variable name="LameDuckBookFlightOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:bookFlightResponse"/>
                                                <variable name="LameDuckBookFlightIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:bookFlight"/>
                                        </variables>
                                        <sequence name="Sequence9">
                                            <assign name="ForEachFlightAssign1">
                                                    <copy>
                                                            <from>$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]/ns4:bookingNumber
                                                                        <sxed:editor>
                                                                            <sxed:predicate path="$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]" source="from"/>
                                                                        </sxed:editor>
                                                                </from>
                                                                <to>$LameDuckBookFlightIn.flightInfo/ns4:bookingNumber</to>
                                                        </copy>
                                                        <copy>
                                                            <from>$TravelGoodBookItineraryIn.request10/creditcard</from>
                                                                <to>$LameDuckBookFlightIn.flightInfo/ns4:creditcardInfo</to>
                                                        </copy>
                                                </assign>
                                                <invoke name="LameDuckBookFlight" partnerLink="PartnerLink2" operation="bookFlight" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" portType="tns:LameDuckPortType" inputVariable="LameDuckBookFlightIn" outputVariable="LameDuckBookFlightOut"/>
                                        </sequence>
                                </scope>
                        </forEach>
                        <forEach name="ForEachHotel" parallel="no" counterName="ForEach1Counter">
                            <startCounterValue>1</startCounterValue>
                            <finalCounterValue>$NumberOfHotels</finalCounterValue>
                            <scope name="Scope1">
                                <variables>
                                    <variable name="NiceViewBookHotelOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:bookHotelResponse"/>
                                    <variable name="NiceViewBookHotelIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:bookHotelRequest"/>
                                </variables>
                                <sequence name="Sequence11">
                                    <assign name="ForEachHotelAssign1">
                                        <copy>
                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:cardNumber</from>
                                            <to>$NiceViewBookHotelIn.input/ns5:creditCardInformation/ns5:cardNumber</to>
                                        </copy>
                                        <copy>
                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:holderName</from>
                                            <to>$NiceViewBookHotelIn.input/ns5:creditCardInformation/ns5:holderName</to>
                                        </copy>
                                        <copy>
                                            <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:expirationDate</from>
                                            <to>$NiceViewBookHotelIn.input/ns5:creditCardInformation/ns5:expirationDate</to>
                                        </copy>
                                        <copy>
                                            <from>$ItineraryOnServer/hotels/ns5:hotelInformations[$ForEach1Counter]/ns5:bookingNumber
                                                <sxed:editor>
                                                    <sxed:predicate path="$ItineraryOnServer/hotels/ns5:hotelInformations[$ForEach1Counter]" source="from"/>
                                                </sxed:editor>
                                            </from>
                                            <to>$NiceViewBookHotelIn.input/ns5:bookingNumber</to>
                                        </copy>
                                    </assign>
                                    <invoke name="NiceViewBookHotel" partnerLink="PartnerLink3" operation="bookHotel" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewBookHotelIn" outputVariable="NiceViewBookHotelOut"/>
                                </sequence>
                            </scope>
                        </forEach>
                        <assign name="BookItineraryFinalAssign">
                            <copy>
                                <from variable="PaidState"/>
                                <to>$ItineraryOnServer/state/ns0:state</to>
                            </copy>
                        </assign>
                    </sequence>
                </onMessage>
            </pick>
        </while>
        <if name="If1">
            <condition>$CancelledState = $ItineraryOnServer/state/ns0:state</condition>
            <while name="WhileCancelledState">
                <condition>$CancelledState and $ItineraryOnServer/state/ns0:state</condition>
                <sequence name="Sequence8">
                    <receive name="CancelledGetItinerary" partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" createInstance="no" variable="TravelGoodCancelledGetItineraryIn">
                        <correlations>
                            <correlation set="ItineraryCorrelationSet" initiate="no"/>
                        </correlations>
                    </receive>
                    <assign name="CancelledItineraryAssign">
                        <copy>
                            <from>$ItineraryOnServer/flights</from>
                            <to>$TravelGoodCancelledGetItineraryOut.itinerary5/flights</to>
                        </copy>
                        <copy>
                            <from>$ItineraryOnServer/hotels</from>
                            <to>$TravelGoodCancelledGetItineraryOut.itinerary5/hotels</to>
                        </copy>
                        <copy>
                            <from>$ItineraryOnServer/state</from>
                            <to>$TravelGoodCancelledGetItineraryOut.itinerary5/state</to>
                        </copy>
                        <copy>
                            <from>$ItineraryOnServer/id</from>
                            <to>$TravelGoodCancelledGetItineraryOut.itinerary5/id</to>
                        </copy>
                    </assign>
                    <reply name="CancelledItineraryReply" partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodCancelledGetItineraryOut"/>
                </sequence>
            </while>
            <elseif>
                <condition>$PaidState = $ItineraryOnServer/state/ns0:state</condition>
                <while name="WhilePaidState">
                    <condition>$PaidState = $ItineraryOnServer/state/ns0:state</condition>
                    <pick name="Pick2">
                        <onMessage partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodPaidStateGetItineraryIn">
                            <correlations>
                                <correlation set="ItineraryCorrelationSet" initiate="no"/>
                            </correlations>
                            <sequence name="Sequence12">
                                <assign name="PaidStateAssign1">
                                    <copy>
                                        <from>$ItineraryOnServer/flights</from>
                                        <to>$TravelGoodPaidStateGetItineraryOut.itinerary5/flights</to>
                                    </copy>
                                    <copy>
                                        <from>$ItineraryOnServer/hotels</from>
                                        <to>$TravelGoodPaidStateGetItineraryOut.itinerary5/hotels</to>
                                    </copy>
                                    <copy>
                                        <from>$ItineraryOnServer/id</from>
                                        <to>$TravelGoodPaidStateGetItineraryOut.itinerary5/id</to>
                                    </copy>
                                    <copy>
                                        <from>$ItineraryOnServer/state/ns0:state</from>
                                        <to>$TravelGoodPaidStateGetItineraryOut.itinerary5/state/ns0:state</to>
                                    </copy>
                                </assign>
                                <reply name="TravelGoodPaidStateReply" partnerLink="PartnerLink1" operation="getItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodPaidStateGetItineraryOut"/>
                            </sequence>
                        </onMessage>
                        <onMessage partnerLink="PartnerLink1" operation="cancelItinerary" portType="ns3:TravelGoodWsdlPortType" variable="TravelGoodPaidStateCancelItineraryIn">
                            <correlations>
                                <correlation set="ItineraryCorrelationSet" initiate="no"/>
                            </correlations>
                            <sequence name="Sequence13">
                                <forEach name="PaidStateForEachFlight" parallel="no" counterName="ForEach1Counter">
                                    <startCounterValue>1</startCounterValue>
                                    <finalCounterValue>$NumberOfFlights</finalCounterValue>
                                    <scope name="Scope2">
                                        <variables>
                                            <variable name="LameDuckCancelFlightOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:cancelFlightResponse"/>
                                            <variable name="LameDuckCancelFlightIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" messageType="tns:cancelFlight"/>
                                        </variables>
                                        <sequence name="Sequence14">
                                            <assign name="PaidStateCancelAssign">
                                                <copy>
                                                    <from>$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]/ns4:bookingNumber
                                                        <sxed:editor>
                                                            <sxed:predicate path="$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]" source="from"/>
                                                        </sxed:editor>
                                                    </from>
                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns4:bookingNumber</to>
                                                </copy>
                                                <copy>
                                                    <from>$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]/ns4:flightPrice
                                                        <sxed:editor>
                                                            <sxed:predicate path="$ItineraryOnServer/flights/ns4:flightInfo[$ForEach1Counter]" source="from"/>
                                                        </sxed:editor>
                                                    </from>
                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns4:price</to>
                                                </copy>
                                                <copy>
                                                    <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:cardNumber</from>
                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns4:creditCardInformation/ns4:cardNumber</to>
                                                </copy>
                                                <copy>
                                                    <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:holderName</from>
                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns4:creditCardInformation/ns4:holderName</to>
                                                </copy>
                                                <copy>
                                                    <from>$TravelGoodBookItineraryIn.request10/creditcard/ns4:expirationDate</from>
                                                    <to>$LameDuckCancelFlightIn.flightInfo/ns4:creditCardInformation/ns4:expirationDate</to>
                                                </copy>
                                            </assign>
                                            <invoke name="LameDuckPaidStateCancelFlight" partnerLink="PartnerLink2" operation="cancelFlight" xmlns:tns="http://j2ee.netbeans.org/wsdl/LameDuck/wsdl/LameDuckWSDL" portType="tns:LameDuckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                        </sequence>
                                    </scope>
                                </forEach>
                                <forEach name="PaidStateForEachHotel" parallel="no" counterName="ForEach2Counter">
                                    <startCounterValue>1</startCounterValue>
                                    <finalCounterValue>$NumberOfHotels</finalCounterValue>
                                    <scope name="Scope3">
                                        <variables>
                                            <variable name="NiceViewPaidStateCancelHotelOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:cancelHotelResponse"/>
                                            <variable name="NiceViewPaidStateCancelHotelIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" messageType="tns:cancelHotelRequest"/>
                                        </variables>
                                        <sequence name="Sequence15">
                                            <assign name="PaidStateCancelHotelAssign">
                                                <copy>
                                                    <from>$ItineraryOnServer/hotels/ns5:hotelInformations[$ForEach2Counter]/ns5:bookingNumber
                                                        <sxed:editor>
                                                            <sxed:predicate path="$ItineraryOnServer/hotels/ns5:hotelInformations[$ForEach2Counter]" source="from"/>
                                                        </sxed:editor>
                                                    </from>
                                                    <to>$NiceViewPaidStateCancelHotelIn.input/ns5:bookingNumber</to>
                                                </copy>
                                            </assign>
                                            <invoke name="NiceViewPaidStateCancelHotel" partnerLink="PartnerLink3" operation="cancelHotel" xmlns:tns="http://j2ee.netbeans.org/wsdl/NiceViewTest/dk/NiceViewWSDL" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewPaidStateCancelHotelIn" outputVariable="NiceViewPaidStateCancelHotelOut"/>
                                        </sequence>
                                    </scope>
                                </forEach>
                            </sequence>
                        </onMessage>
                    </pick>
                </while>
            </elseif>
        </if>
    </sequence>
</process>
